{"version":3,"file":"static/js/231.38d2111f.chunk.js","mappings":"6JAEO,MCODA,EAAiBC,cDPCC,KACtB,MAAM,IAAEC,EAAG,OAAEC,EAAM,KAAEC,EAAI,QAAEC,GAAYJ,EACvC,OAAOK,EAAAA,EAAMC,QAAQ,CACnBC,QAAS,8BACTN,MACAC,SACAC,OACAC,WACA,ECEWI,CAAQ,CACnBP,IAAI,kBAADQ,OAAoBC,EAAI,eA6B/B,QAjBA,WACE,OAAOC,EAAAA,EAAAA,GAAiB,CACtBC,SAAU,CAAC,kBACXC,QAASC,IAAA,IAAC,UAAEC,GAAgBD,EAAA,OAAKhB,EAAeiB,EAAU,EAC1DC,iBAAkB,EAClBC,iBAAkBA,CAChBC,EACAC,EACAC,EACAC,IAGOD,EAAgB,GAAKA,EAAgB,OAAIE,GAGtD,E,aCdA,QApBA,SAAqBC,GAA2B,IAADC,EAC7C,MAAM,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,SAAEC,GAAuB,QAAbJ,EAAGD,EAAMM,YAAI,IAAAL,EAAAA,EAAI,CAAC,EACzD,OACEM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gFAA+EC,SAAA,EAC5FC,EAAAA,EAAAA,KAAA,OACEC,IAAKR,EACLS,IAAI,gBACJJ,UAAU,6BACVK,QAAQ,UAEVN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,2CAA0CC,SAAA,CAAC,IAAEL,MAC3DM,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uEAAsEC,SACjFP,KAEHQ,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+DAA8DC,SACxEJ,MAIT,E,sDCpBA,MAAMS,EAAkB,CACtB,QACA,SACA,SACA,KACA,aACA,UA6FF,QAtFA,SAAgBd,GAAsB,IAADe,EAAAC,EACnC,MAAM,QAAEC,EAAO,WAAEC,GAAelB,EAC1BmB,EAAeA,CAACC,EAA0BC,KAE9CH,GAAYI,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAO,IAAE,CAACF,GAAaC,KAAS,EAErE,OACEX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+EAA8EC,UAC3FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,MAACiB,EAAAA,GAAI,CAACC,GAAG,MAAMjB,UAAU,4CAA2CC,SAAA,EAClEC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAACmB,EAAAA,GAAU,CAAClB,UAAU,oGAAmGC,SAAA,CACrG,QADqGM,EAC/G,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASZ,gBAAQ,IAAAU,EAAAA,EAAI,YACtBL,EAAAA,EAAAA,KAACiB,EAAAA,EAAe,CACd,cAAY,OACZnB,UAAU,6EAKhBE,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CACRC,YAAU,EACVrB,UAAU,ySAAwSC,UAElTC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAClBK,EAAgBgB,KAAI,CAACxB,EAAMyB,KAExBrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAQ,CAAAvB,UACPC,EAAAA,EAAAA,KAAA,KACEuB,QAASA,IAAMd,EAAa,WAAYb,GACxCE,UACE,sGACDC,SAEAH,KACC,YAAApB,OARqB6C,cAgBrCxB,EAAAA,EAAAA,MAACiB,EAAAA,GAAI,CAACC,GAAG,MAAMjB,UAAU,kCAAiCC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAACmB,EAAAA,GAAU,CAAClB,UAAU,oGAAmGC,SAAA,CACzG,QADyGO,EAC/G,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASiB,YAAI,IAAAlB,EAAAA,EAAI,QAClBN,EAAAA,EAAAA,KAACiB,EAAAA,EAAe,CACd,cAAY,OACZnB,UAAU,6EAKhBE,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CACRC,YAAU,EACVrB,UAAU,ySAAwSC,UAElTF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAACsB,EAAAA,GAAQ,CAAAvB,UACPC,EAAAA,EAAAA,KAAA,KACEF,UACE,2FAEFyB,QAASA,IAAMd,EAAa,OAAQ,aAAaV,SAClD,0BAIHC,EAAAA,EAAAA,KAACsB,EAAAA,GAAQ,CAAAvB,UACPC,EAAAA,EAAAA,KAAA,KACEF,UACE,2FAEFyB,QAASA,IAAMd,EAAa,OAAQ,aAAaV,SAClD,qCAUjB,E,wBChDA,QA7CA,SAA4BT,GAC1B,MAAM,cAAEmC,EAAa,OAAEC,EAAM,UAAEC,GAAcrC,EAE7C,OACEO,EAAAA,EAAAA,MAAC+B,EAAAA,GAAM,CACLC,KAAMH,EACNI,QAASA,IAAMH,GAAU,GACzB7B,UAAU,gBAAeC,SAAA,EAGzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA4B,cAAY,UAGvDE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8DAA6DC,UAE1EF,EAAAA,EAAAA,MAACkC,EAAAA,GAAW,CAACjC,UAAU,sFAAqFC,SAAA,EAC1GC,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CAAClC,UAAW,aAAaC,UACnCF,EAAAA,EAAAA,MAAA,UACE0B,QAASA,IAAMI,GAAU,GACzB7B,UAAU,iDAAgDC,SAAA,EAE1DC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CAACnC,UAAU,YAAY,UAIrCE,EAAAA,EAAAA,KAAA,OACEC,IAAkB,OAAbwB,QAAa,IAAbA,OAAa,EAAbA,EAAehC,MACpBS,IAAI,gBACJJ,UAAU,gCAEZD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,2CAA0CC,SAAA,CAAC,IACxC,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAe/B,UAEnBM,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+DAA8DC,SAC5D,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAejC,SAElBQ,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0CAAyCC,SACtC,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAeS,qBAM5B,ECwDA,QAjGA,WAAqB,IAADC,EAClB,MAAO5B,EAASC,IAAc4B,EAAAA,EAAAA,UAAiB,CAAC,IACzCC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAC1C,CAAC,IAEIV,EAAQC,IAAaS,EAAAA,EAAAA,WAAkB,IACxC,KAAElE,EAAI,QAAEqE,EAAO,UAAEC,EAAS,cAAEC,EAAa,mBAAEC,GAC/CC,IACIC,GAA6C,QAAZT,EAAK,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAM2E,aAAK,IAAAV,EAAAA,EAAI,IJCpDf,KAAKlD,IAAI,IAAA4E,EAAA,OAAS,OAAJ5E,QAAI,IAAJA,GAAU,QAAN4E,EAAJ5E,EAAMA,YAAI,IAAA4E,OAAN,EAAJA,EAAYC,QAAQ,IAClCC,QAAO,CAACC,EAAGC,IAAMD,EAAEzE,OAAO0E,IAAI,IIE3BC,GAAsBC,EAAAA,EAAAA,UAC1B,IACER,EACGS,QAAQC,IAEC/C,EAAQZ,UAAY2D,EAAQ3D,WAAaY,EAAQZ,WAE1D6B,MAAK,CAACyB,EAAGC,IACS,cAAjB3C,EAAQiB,KACJyB,EAAEvD,MAAQwD,EAAExD,MACK,cAAjBa,EAAQiB,KACR0B,EAAExD,MAAQuD,EAAEvD,MACZ,KAEV,CAACa,EAASqC,IAGZ,OAAIJ,GAEAxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,MAIVhB,GAEAvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iDAAgDC,UAC7DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2BAA0BC,SAAC,qDAQ5CF,EAAAA,EAAAA,MAAA,WAASC,UAAU,OAAMC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAACwD,EAAM,CAAChD,WAAYA,EAAYD,QAASA,OAE3CP,EAAAA,EAAAA,KAACyD,EAAAA,EAAc,CACbC,WAAYP,EAAoBQ,OAChCC,KAAMnB,EACNoB,SAAS,EACTC,OACEpB,IACE1C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,MAIdQ,2BAA4B,GAAGhE,UAEX,OAAnBoD,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBQ,QAAS,GAC7B3D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iEAAgEC,SAC5EoD,EAAoB/B,KAAI,CAACxB,EAAMyB,KAE5BrB,EAAAA,EAAAA,KAAA,OAEEuB,QAASA,KACPe,EAAkB1C,GAClB+B,GAAU,EAAK,EACf5B,UAEFC,EAAAA,EAAAA,KAACgE,EAAW,CAACpE,KAAMA,KAAQ,QAAApB,OANd6C,SAYrBrB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2BAA0BC,SAAC,8BAMjDC,EAAAA,EAAAA,KAACiE,EAAkB,CACjBxC,cAAeY,EACfX,OAAQA,EACRC,UAAWA,MAInB,C","sources":["Utils/Helpers.ts","Hooks/useGetProductsInfiniteQuery.ts","Components/ProductCard.tsx","Components/Filter.tsx","Components/ProductDetailModal.tsx","Pages/Home.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\n\nexport const fetcher = (config: AxiosRequestConfig) => {\n  const { url, method, data, headers } = config;\n  return axios.request({\n    baseURL: \"https://fakestoreapi.in/api\",\n    url,\n    method,\n    data,\n    headers,\n  });\n};\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\nimport { AxiosResponse } from \"axios\";\n\nimport {\n  GET_PRODUCT_LIST_RESPONSE,\n  PRODUCT_ITEM_TYPES,\n} from \"../Types/RequestTypes\";\nimport { fetcher } from \"../Utils/Helpers\";\n\nconst getProductList = async (\n  page: number\n): Promise<AxiosResponse<GET_PRODUCT_LIST_RESPONSE>> => {\n  return await fetcher({\n    url: `/products?page=${page}&limit=12`, // Assuming you need to pass the page number\n  });\n};\n\nexport const getProductListArray = (\n  pages: Array<AxiosResponse<GET_PRODUCT_LIST_RESPONSE>>\n): Array<PRODUCT_ITEM_TYPES> => {\n  return pages\n    .map((data) => data?.data?.products)\n    .reduce((a, b) => a.concat(b), []);\n};\n\nfunction useGetProductsInfiniteQuery() {\n  return useInfiniteQuery({\n    queryKey: [\"productListKey\"],\n    queryFn: ({ pageParam }: any) => getProductList(pageParam),\n    initialPageParam: 1,\n    getNextPageParam: (\n      lastPage: any,\n      allPages,\n      lastPageParam,\n      allPageParams\n    ) => {\n      //  managing hardcoded pagination count, because we are not receiving total product count or total pages key from backend\n      return lastPageParam < 13 ? lastPageParam + 1 : undefined;\n    },\n  });\n}\n\nexport default useGetProductsInfiniteQuery;\n","import React from \"react\";\nimport { PRODUCT_ITEM_TYPES } from \"../Types/RequestTypes\";\n\ntype PRODUCT_CARD_TYPE = {\n  item: PRODUCT_ITEM_TYPES;\n};\nfunction ProductCard(props: PRODUCT_CARD_TYPE) {\n  const { title, image, price, category } = props.item ?? {};\n  return (\n    <div className=\"bg-white shadow-[0_1px_4px_rgba(0,0,0,.15)] p-4 rounded-[10px] cursor-pointer\">\n      <img\n        src={image}\n        alt=\"product image\"\n        className=\"w-full h-48 object-contain\"\n        loading=\"lazy\"\n      />\n      <h6 className=\"text-primary font-[700] text-center py-2\">${price}</h6>\n      <h6 className=\"text-background text-[16px] font-[600] two-line-ellipsis text-center\">\n        {title}\n      </h6>\n      <p className=\"text-background text-center text-[14px] mt-[20px] capitalize\">\n        {category}\n      </p>\n    </div>\n  );\n}\nexport default ProductCard;\n","import { Menu, MenuButton, MenuItem, MenuItems } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/24/outline\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { FILTER } from \"../Types/CommonTypes\";\n\nconst categoriesArray = [\n  \"audio\",\n  \"mobile\",\n  \"laptop\",\n  \"tv\",\n  \"appliances\",\n  \"gaming\",\n];\n\ntype FILTER_TYPES = {\n  setFilters: Dispatch<SetStateAction<FILTER>>;\n  filters: FILTER;\n};\nfunction Filter(props: FILTER_TYPES) {\n  const { filters, setFilters } = props;\n  const handleChange = (filterType: keyof FILTER, value: string) => {\n    // Correctly spread the previous state and update the selected filter\n    setFilters((prevVal: any) => ({ ...prevVal, [filterType]: value }));\n  };\n  return (\n    <div className=\"flex items-baseline justify-end border-b border-gray-200 pb-6 pt-10 md:pt-24\">\n      <div className=\"flex  items-center\">\n        <Menu as=\"div\" className=\"relative inline-block text-left mr-[16px]\">\n          <div>\n            <MenuButton className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900 capitalize\">\n              {filters?.category ?? \"Category\"}\n              <ChevronDownIcon\n                aria-hidden=\"true\"\n                className=\"-mr-1 ml-1 size-5 shrink-0 text-gray-400 group-hover:text-gray-500\"\n              />\n            </MenuButton>\n          </div>\n\n          <MenuItems\n            transition\n            className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black/5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in\"\n          >\n            <div className=\"py-1\">\n              {categoriesArray.map((item, index) => {\n                return (\n                  <MenuItem key={`category-${index}`}>\n                    <a\n                      onClick={() => handleChange(\"category\", item)}\n                      className={\n                        \"block px-4 py-2 text-sm data-[focus]:bg-gray-100 data-[focus]:outline-none text-gray-500 capitalize\"\n                      }\n                    >\n                      {item}\n                    </a>\n                  </MenuItem>\n                );\n              })}\n            </div>\n          </MenuItems>\n        </Menu>\n\n        <Menu as=\"div\" className=\"relative inline-block text-left\">\n          <div>\n            <MenuButton className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900 capitalize\">\n              {filters?.sort ?? \"Sort\"}\n              <ChevronDownIcon\n                aria-hidden=\"true\"\n                className=\"-mr-1 ml-1 size-5 shrink-0 text-gray-400 group-hover:text-gray-500\"\n              />\n            </MenuButton>\n          </div>\n\n          <MenuItems\n            transition\n            className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black/5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in\"\n          >\n            <div className=\"py-1\">\n              <MenuItem>\n                <a\n                  className={\n                    \"block px-4 py-2 text-sm data-[focus]:bg-gray-100 data-[focus]:outline-none text-gray-500\"\n                  }\n                  onClick={() => handleChange(\"sort\", \"lowToHigh\")}\n                >\n                  Price: Low to High\n                </a>\n              </MenuItem>\n              <MenuItem>\n                <a\n                  className={\n                    \"block px-4 py-2 text-sm data-[focus]:bg-gray-100 data-[focus]:outline-none text-gray-500\"\n                  }\n                  onClick={() => handleChange(\"sort\", \"highToLow\")}\n                >\n                  Price: High to Low\n                </a>\n              </MenuItem>\n            </div>\n          </MenuItems>\n        </Menu>\n      </div>\n    </div>\n  );\n}\nexport default Filter;\n","import { Dispatch, SetStateAction } from \"react\";\nimport { Dialog, DialogPanel, DialogTitle } from \"@headlessui/react\";\nimport { PRODUCT_ITEM_TYPES } from \"../Types/RequestTypes\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\n\ntype PRODUCT_DETAIL_MODAL_PROPS = {\n  productDetail: PRODUCT_ITEM_TYPES;\n  isOpen: boolean;\n  setIsOpen: Dispatch<SetStateAction<boolean>>;\n};\nfunction ProductDetailModal(props: PRODUCT_DETAIL_MODAL_PROPS) {\n  const { productDetail, isOpen, setIsOpen } = props;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => setIsOpen(false)}\n      className=\"relative z-50\"\n    >\n      {/* The backdrop, rendered as a fixed sibling to the panel container */}\n      <div className=\"fixed inset-0 bg-black/30\" aria-hidden=\"true\" />\n\n      {/* Full-screen scrollable container */}\n      <div className=\"fixed inset-0 flex w-screen items-center justify-center p-4\">\n        {/* The actual dialog panel  */}\n        <DialogPanel className=\"mx-auto my-[20px] max-w-screen-lg rounded bg-white p-6 max-h-[90vh] overflow-y-auto\">\n          <DialogTitle className={\"text-right\"}>\n            <button\n              onClick={() => setIsOpen(false)}\n              className=\" text-black p-2 rounded-full hover:bg-gray-200\"\n            >\n              <XMarkIcon className=\"w-6 h-6\" /> {/* Heroicons close icon */}\n            </button>\n          </DialogTitle>\n\n          <img\n            src={productDetail?.image}\n            alt=\"product image\"\n            className=\"w-full h-48 object-contain\"\n          />\n          <h6 className=\"text-primary font-[700] text-center py-2\">\n            ${productDetail?.price}\n          </h6>\n          <h6 className=\"text-background text-[20px] font-[600] mb-[16px] text-center\">\n            {productDetail?.title}\n          </h6>\n          <p className=\"text-background text-center text-[16px]\">\n            {productDetail?.description}\n          </p>\n        </DialogPanel>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default ProductDetailModal;\n","import React, { useMemo, useState } from \"react\";\nimport useGetProductsInfiniteQuery, {\n  getProductListArray,\n} from \"../Hooks/useGetProductsInfiniteQuery\";\nimport ProductCard from \"../Components/ProductCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Spinner from \"../Components/Spinner\";\nimport Filter from \"../Components/Filter\";\nimport { FILTER } from \"../Types/CommonTypes\";\nimport ProductDetailModal from \"../Components/ProductDetailModal\";\nimport { PRODUCT_ITEM_TYPES } from \"../Types/RequestTypes\";\n\nfunction HomePage() {\n  const [filters, setFilters] = useState<FILTER>({} as FILTER);\n  const [productDetails, setProductDetails] = useState<PRODUCT_ITEM_TYPES>(\n    {} as PRODUCT_ITEM_TYPES\n  );\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const { data, isError, isLoading, fetchNextPage, isFetchingNextPage } =\n    useGetProductsInfiniteQuery();\n  const productList = getProductListArray(data?.pages ?? []);\n\n  // Filter Will work only loaded data, it's only managed by Frontend.\n\n  const filteredProductList = useMemo(\n    () =>\n      productList\n        .filter((product) => {\n          // If no category is selected, show all products\n          return !filters.category || product.category === filters.category;\n        })\n        .sort((a, b) =>\n          filters.sort === \"lowToHigh\"\n            ? a.price - b.price\n            : filters.sort === \"highToLow\"\n            ? b.price - a.price\n            : 0\n        ),\n    [filters, productList]\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"h-svh flex justify-center items-center\">\n        <Spinner />\n      </div>\n    );\n  }\n  if (isError) {\n    return (\n      <div className=\"container mx-auto px-4 py-10 my-10 text-center\">\n        <p className=\"text-primary text-[20px]\">\n          Something went wrong, please Refresh the Page\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"py-5\">\n      <div className=\"container mx-auto\">\n        <div className=\"px-4\">\n          <Filter setFilters={setFilters} filters={filters} />\n        </div>\n        <InfiniteScroll\n          dataLength={filteredProductList.length}\n          next={fetchNextPage}\n          hasMore={true}\n          loader={\n            isFetchingNextPage && (\n              <div className=\"flex justify-center\">\n                <Spinner />\n              </div>\n            )\n          }\n          pullDownToRefreshThreshold={50}\n        >\n          {filteredProductList?.length > 0 ? (\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-5 px-4 py-5\">\n              {filteredProductList.map((item, index) => {\n                return (\n                  <div\n                    key={`item-${index}`}\n                    onClick={() => {\n                      setProductDetails(item);\n                      setIsOpen(true);\n                    }}\n                  >\n                    <ProductCard item={item} />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"flex justify-center py-10 mt-10\">\n              <h5 className=\"text-primary text-[24px]\">No Products Found</h5>\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n\n      <ProductDetailModal\n        productDetail={productDetails}\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n      />\n    </section>\n  );\n}\nexport default HomePage;\n"],"names":["getProductList","async","config","url","method","data","headers","axios","request","baseURL","fetcher","concat","page","useInfiniteQuery","queryKey","queryFn","_ref","pageParam","initialPageParam","getNextPageParam","lastPage","allPages","lastPageParam","allPageParams","undefined","props","_props$item","title","image","price","category","item","_jsxs","className","children","_jsx","src","alt","loading","categoriesArray","_filters$category","_filters$sort","filters","setFilters","handleChange","filterType","value","prevVal","_objectSpread","Menu","as","MenuButton","ChevronDownIcon","MenuItems","transition","map","index","MenuItem","onClick","sort","productDetail","isOpen","setIsOpen","Dialog","open","onClose","DialogPanel","DialogTitle","XMarkIcon","description","_data$pages","useState","productDetails","setProductDetails","isError","isLoading","fetchNextPage","isFetchingNextPage","useGetProductsInfiniteQuery","productList","pages","_data$data","products","reduce","a","b","filteredProductList","useMemo","filter","product","Spinner","Filter","InfiniteScroll","dataLength","length","next","hasMore","loader","pullDownToRefreshThreshold","ProductCard","ProductDetailModal"],"sourceRoot":""}